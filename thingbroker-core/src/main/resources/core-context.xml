<?xml version="1.0" encoding="UTF-8"?>
<!-- This XML file is imported by the root-context.xml file in thingbroker-web project to provide access to services from thingbroker-core -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:amq="http://activemq.apache.org/schema/core"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-3.2.xsd
	http://activemq.apache.org/schema/core
	http://activemq.apache.org/schema/core/activemq-core.xsd">

	<bean name="applicationDao" class="ca.ubc.magic.thingbroker.dao.MongoApplicationDao">
		<constructor-arg ref="mongoDBTemplate"/>
	</bean>
	
	<bean name="messages" class="ca.ubc.magic.utils.Messages">
		<constructor-arg>
			<bean
				class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
					<property name="basename" value="/WEB-INF/thingbroker_messages"></property>
			</bean>
		</constructor-arg>
	</bean>
	
	<bean id="thingService" class="ca.ubc.magic.thingbroker.services.ThingServiceImpl">
		<constructor-arg ref="thingDao"/>
	    <constructor-arg ref="messages"/>
	</bean>
	
	<bean id="eventService" class="ca.ubc.magic.thingbroker.services.EventServiceImpl">
	    <constructor-arg ref="jmsTemplate"/>
	    <constructor-arg ref="realTimeEventService"/>
	    <constructor-arg ref="thingDao"/>
	    <constructor-arg ref="eventDao"/>
	    <constructor-arg ref="eventDataDao"/>
	    <constructor-arg ref="applicationDao"/>
	    <constructor-arg ref="messages"/>
	</bean>
	
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsFactory" />
 	</bean>
	
	<!-- call cleanup every 30 seconds to see if we can dump any ThingEventHandlers -->
	<task:scheduled-tasks scheduler="myScheduler">
		<task:scheduled ref="realTimeEventService" method="cleanUp" fixed-delay="30000"/>
		<!-- can add other timer tasks here, may want to add more threads to the scheduler below -->
<!--     <task:scheduled ref="beanC" method="methodC" cron="*/5 * * * * MON-FRI"/>  -->
	</task:scheduled-tasks>

	<task:scheduler id="myScheduler"/>

	<bean id="realTimeEventService" class="ca.ubc.magic.thingbroker.services.realtime.RealTimeEventServiceImpl">
		<constructor-arg ref="connectionFactory"/>
	</bean>

	<!-- MongoDB templates - probably need only the factories and can create the templates as needed -->
	<bean id="mongoThingBrokerDbFactory" class="org.springframework.data.mongodb.core.SimpleMongoDbFactory">
		<constructor-arg ref="mongo"/>
		<constructor-arg value="thingbroker"/>
	</bean>

	<bean id="eventDao" class="ca.ubc.magic.thingbroker.dao.EventDAO">
		<constructor-arg ref="mongoDBTemplate"/>
		<constructor-arg ref="eventDataDao"/>
	</bean>
		
	<bean id="eventDataDao" class="ca.ubc.magic.thingbroker.dao.EventDataDAO">
		<constructor-arg ref="mongoStorageTemplate"/>
	</bean>
	
	<bean id="thingDao" class="ca.ubc.magic.thingbroker.dao.ThingDAO">
		<constructor-arg ref="mongoDBTemplate"/>
		<constructor-arg ref="eventDao"/>
	</bean>
	
	<bean id="mongo" class="com.mongodb.Mongo"/>
	
	<bean id="mongoThingBrokerContetStorageFactory" class="org.springframework.data.mongodb.core.SimpleMongoDbFactory">
		<constructor-arg ref="mongo"/>
		<constructor-arg value="tbcontentstorage"/>
	</bean>
	
	<bean id="mongoDBTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongoThingBrokerDbFactory"/>
	</bean>
	
	<bean id="mongoStorageTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongoThingBrokerContetStorageFactory"/>
	</bean>
	
	<bean id="mongoThingBrokerContentTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongoThingBrokerDbFactory"/>
	</bean>
 	
	<!-- ActiveMQ broker, connection factory, and pooled connection factory configuration -->
	<bean id="connectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL">
						<!-- external broker for deployment 
						<value>tcp://localhost:61616</value>
 						-->
 						<!-- embedded broker for testing -->
 						<value>vm://localhost</value>
				</property>
			</bean>
		</property>
	</bean>

	<amq:connectionFactory id="jmsFactory" brokerURL="vm://localhost"/>

	<amq:broker brokerName="thingbroker" useJmx="false" persistent="false" dataDirectory="/tmp/thingbroker">
	    <amq:transportConnectors>
			<amq:transportConnector uri="tcp://localhost:0" />
		</amq:transportConnectors>
	</amq:broker>
</beans>